{"version":3,"sources":["context/contextReducer.js","context/context.js","components/Details/styles.js","constants/categories.js","useTransactions.js","components/Details/Details.jsx","utils/formatDate.js","components/Main/Form/styles.js","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/Main/styles.js","components/InfoCard.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","transaction","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","makeStyles","income","borderBottom","expense","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","rightTransactions","useContext","t","total","categories","category","find","filteredCategories","sc","chartData","datasets","data","map","backgroundColor","labels","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyContent","marginBottom","button","marginTop","formatDate","Form","useState","formData","setFormData","segment","useSpeechContext","setOpen","createTransaction","Number","isNaN","includes","iC","uuidv4","useEffect","intent","isFinal","entities","s","charAt","slice","toLowerCase","selectedCategories","Grid","container","spacing","item","xs","align","gutterBottom","words","w","items","FormControl","fullWidth","InputLabel","Select","onChange","e","target","MenuItem","key","TextField","label","Button","onClick","theme","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","isIncome","Math","round","random","InfoCard","elevation","style","textAlign","padding","Main","root","subheader","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","size","gradientStops","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.6e7f7ece.chunk.js","sourcesContent":["const contextReducer = (state, action) => {\r\n  let transactions;\r\n\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      transactions = state.filter((transaction) => transaction.id !== action.payload);\r\n\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    case 'ADD_TRANSACTION':\r\n      transactions = [action.payload, ...state];\r\n\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n\r\n      return transactions;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contextReducer;","import React, { useReducer, createContext } from 'react';\r\n\r\nimport contextReducer from './contextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n  const [transactions, dispatch] = useReducer(contextReducer, initialState);\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({ type: 'DELETE_TRANSACTION', payload: id });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\r\n  };\r\n\r\n  const balance = transactions.reduce((acc, currVal) => (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount), 0);\r\n\r\n  return (\r\n    <ExpenseTrackerContext.Provider value={{\r\n      transactions,\r\n      balance,\r\n      deleteTransaction,\r\n      addTransaction,\r\n    }}\r\n    >\r\n      {children}\r\n    </ExpenseTrackerContext.Provider>\r\n  );\r\n};","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport default makeStyles(() => ({\r\n    income: {\r\n      borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\r\n    },\r\n    expense: {\r\n      borderBottom: '10px solid rgba(255, 0, 0, 0.5)',\r\n    },\r\n  }));","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  const rightTransactions = transactions.filter((t) => t.type === title);\r\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    if (category) category.amount += t.amount;\r\n  });\r\n\r\n  const filteredCategories = categories.filter((sc) => sc.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData };\r\n};\r\n\r\nexport default useTransactions;","import React from 'react'\r\nimport { Card , CardHeader , CardContent , Typography} from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useStyles from './styles';\r\nimport useTransactions from '../../useTransactions';\r\nconst Details = ({title}) => {\r\n    const classes = useStyles();\r\n    const { total , chartData } = useTransactions(title);\r\n     return (\r\n       <Card className = {title === 'Income' ? classes.income : classes.expense}>\r\n           <CardHeader title = {title} />\r\n           <CardContent>\r\n               <Typography variant = \"h5\">Rs {total}</Typography>\r\n               <Doughnut data = {chartData} />\r\n           </CardContent>\r\n\r\n       </Card>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","export default (date) => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = d.getFullYear();\r\n  \r\n    if (month.length < 2) { month = `0${month}`; }\r\n    if (day.length < 2) { day = `0${day}`; }\r\n  \r\n    return [year, month, day].join('-');\r\n  };","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '5px',\r\n  },\r\n}));","import { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport React, { useContext, useState , useEffect } from 'react';\r\n\r\nimport { ExpenseTrackerContext } from '../../../context/context'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport useStyles from './styles';\r\nimport {incomeCategories , expenseCategories } from '../../../constants/categories'\r\nimport { useSpeechContext } from '@speechly/react-client';\r\n\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate(new Date()),\r\n}\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const { addTransaction } = useContext(ExpenseTrackerContext);\r\n    const { segment } = useSpeechContext();\r\n    const [open , setOpen] = useState(false);\r\n    const createTransaction = () => {\r\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n        if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n          setFormData({ ...formData, type: 'Income' });\r\n        } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n          setFormData({ ...formData, type: 'Expense' });\r\n        }\r\n    \r\n        setOpen(true);\r\n        addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n        setFormData(initialState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n          if (segment.intent.intent === 'add_expense') {\r\n            setFormData({ ...formData, type: 'Expense' });\r\n          } else if (segment.intent.intent === 'add_income') {\r\n            setFormData({ ...formData, type: 'Income' });\r\n          } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n            return createTransaction();\r\n          } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n            return setFormData(initialState);\r\n          }\r\n    \r\n          segment.entities.forEach((s) => {\r\n            const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n    \r\n            switch (s.type) {\r\n              case 'amount':\r\n                setFormData({ ...formData, amount: s.value });\r\n                break;\r\n              case 'category':\r\n                if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n                  setFormData({ ...formData, type: 'Income', category });\r\n                } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n                  setFormData({ ...formData, type: 'Expense', category });\r\n                }\r\n                break;\r\n              case 'date':\r\n                setFormData({ ...formData, date: s.value });\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          });\r\n    \r\n          if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n            createTransaction();\r\n          }\r\n        }\r\n      }, [segment]);\r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories; \r\n    return (\r\n        <Grid container spacing = {2}>\r\n            <Grid item xs ={12}>\r\n                <Typography align = \"center\" variant = \"subtitle2\" gutterBottom>\r\n                    {segment ? (\r\n                        <>\r\n                            {segment.words.map((w) => w.value).join(\" \")}\r\n                        </>\r\n                    ): null }\r\n                </Typography>\r\n\r\n            </Grid>\r\n            <Grid items xs = {6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select value = {formData.type} onChange= {(e) => setFormData({ ...formData, type: e.target.value })}>\r\n                        <MenuItem value = \"Income\">Income</MenuItem>\r\n                        <MenuItem value = \"Expense\">Expense</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs ={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value = {formData.category} onChange = {(e) => setFormData({...formData, category: e.target.value})}>\r\n                        {selectedCategories.map((c) => <MenuItem key= {c.type} value = {c.type}>{c.type}</MenuItem> )}\r\n                    </Select>\r\n                </FormControl>                \r\n            </Grid>\r\n            <Grid item xs = {6}>\r\n                <TextField type = \"number\" label = \"Amount\" fullWidth value = {formData.amount} onChange = {(e) => setFormData({...formData, amount: e.target.value}) } />\r\n            </Grid>\r\n            <Grid item xs = {6}>\r\n                <TextField type = \"date\" label = \"Date\" fullWidth value = {formData.date} onChange = {(e) => setFormData({...formData, date: formatDate(e.target.value)}) }/>\r\n            </Grid>\r\n            <Button className = {classes.button} variant = \"outlined\" color = \"primary\" fullWidth onClick = {createTransaction} >Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '150px',\r\n    overflow: 'auto',\r\n  },\r\n}));","import React , {useContext} from 'react'\r\nimport {Avatar, IconButton, List as MUIList, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Slide} from '@material-ui/core'\r\nimport useStyles from './styles';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\n\r\nconst List = () => {\r\n    const classes = useStyles();\r\n    const { deleteTransaction , transactions } = useContext(ExpenseTrackerContext);\r\n    \r\n\r\n    return (\r\n        <MUIList dense={false} className={classes.list}>\r\n          {transactions.map((transaction) => (\r\n            <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\r\n                    <MoneyOff />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - ${transaction.date}`} />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\r\n                    <Delete />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </Slide>\r\n          ))}\r\n        </MUIList>\r\n      ); \r\n    };\r\n    \r\n    export default List;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import React from 'react';\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n  return (\r\n    <div elevation={3} style={{ textAlign: 'center', padding: '0 10%' }}>\r\n      Try saying: <br /> \r\n      Add {isIncome ? 'Income ' : 'Expense '} \r\n      for {isIncome ? 'Rs 100 ' : 'Rs 50 '}  \r\n      in Category {isIncome ? 'Salary ' : 'Travel '}\r\n      for {isIncome ? 'Monday ' : 'Thursday '}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;","import { Card, CardContent, CardHeader, Divider, Grid, Typography } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport useStyles from './styles';\r\nimport { ExpenseTrackerContext } from '../../context/context'\r\nimport InfoCard from '../InfoCard';\r\n\r\n\r\nconst Main = () => {\r\n    const classes = useStyles();\r\n    const { balance } = useContext(ExpenseTrackerContext);\r\n    return (\r\n       <Card className = {classes.root}>\r\n           <CardHeader title = \"Expense Tracker\" subheader = \"Powered by Speechly\" style = {{textAlign: 'center'}} />\r\n            <CardContent>\r\n                <Typography align = \"center\" variant = \"h5\">Total Balance Rs {balance}</Typography>\r\n                <Typography variant =\"subtitle1\" style={{lineHeight :'1.5rem' , marginTop:'20px'}}>\r\n                   <InfoCard />\r\n                </Typography>\r\n                <Divider className = {classes.divider}/>\r\n                <Form />\r\n            </CardContent>\r\n            <CardContent className = {classes.cartContent}>\r\n                <Grid container spacing = {2}>\r\n                    <Grid item xs = {12}>\r\n                        <List/>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n       </Card>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n      \r\n    },\r\n  },\r\n}));","import React, { useEffect, useRef } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\n\r\nimport Details from './components/Details/Details';\r\nimport Main from './components/Main/Main';\r\nimport useStyles from './styles';\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const { speechState } = useSpeechContext();\r\n  const main = useRef(null)\r\n\r\n  const executeScroll = () => main.current.scrollIntoView()    \r\n\r\n  useEffect(() => {\r\n    if (speechState === SpeechState.Recording) {\r\n      executeScroll();\r\n    }\r\n  }, [speechState]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '90vh'}}>\r\n        <Grid item xs={12} sm={4} className={classes.mobile}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\r\n          <Main />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.desktop}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.last}>\r\n          <Details title=\"Expense\" />\r\n        </Grid>\r\n        <PushToTalkButtonContainer >\r\n          <PushToTalkButton  size =\"4rem\" gradientStops={[\"green\", \"red\"]}/>\r\n        </PushToTalkButtonContainer>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SpeechProvider } from '@speechly/react-client';\r\n\r\nimport { Provider } from './context/context';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <SpeechProvider appId=\"49c61743-6406-4f9e-bb5b-938822e16095\" language=\"en-US\">\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </SpeechProvider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}